{"ast":null,"code":"var _jsxFileName = \"D:\\\\my-app\\\\src\\\\Components\\\\chart.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PlotGraph() {\n  _s();\n  const [xData, setXData] = useState('');\n  const [yData, setYData] = useState('');\n  const [data, setData] = useState([]);\n  const handlePlot = () => {\n    const xValues = xData.split(',').map(Number);\n    const yValues = yData.split(',').map(Number);\n    if (xValues.length !== yValues.length) {\n      alert('X-axis and Y-axis data must have the same length');\n      return;\n    }\n    const plotData = xValues.map((x, i) => ({\n      x,\n      y: yValues[i]\n    }));\n    setData(plotData);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Plot Graph\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"X-axis data (comma separated):\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: xData,\n          onChange: e => setXData(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Y-axis data (comma separated):\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: yData,\n          onChange: e => setYData(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handlePlot,\n      children: \"Plot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: 400,\n      children: /*#__PURE__*/_jsxDEV(LineChart, {\n        data: data,\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"3 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          type: \"monotone\",\n          dataKey: \"y\",\n          stroke: \"#8884d8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(PlotGraph, \"ZQzX/bkhy/D06N7CwRntBDK0fIE=\");\n_c = PlotGraph;\nexport default PlotGraph;\nvar _c;\n$RefreshReg$(_c, \"PlotGraph\");","map":{"version":3,"names":["React","useState","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","jsxDEV","_jsxDEV","PlotGraph","_s","xData","setXData","yData","setYData","data","setData","handlePlot","xValues","split","map","Number","yValues","length","alert","plotData","x","i","y","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onClick","width","height","strokeDasharray","dataKey","stroke","_c","$RefreshReg$"],"sources":["D:/my-app/src/Components/chart.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\r\n\r\nfunction PlotGraph() {\r\n  const [xData, setXData] = useState('');\r\n  const [yData, setYData] = useState('');\r\n  const [data, setData] = useState([]);\r\n\r\n  const handlePlot = () => {\r\n    const xValues = xData.split(',').map(Number);\r\n    const yValues = yData.split(',').map(Number);\r\n\r\n    if (xValues.length !== yValues.length) {\r\n      alert('X-axis and Y-axis data must have the same length');\r\n      return;\r\n    }\r\n\r\n    const plotData = xValues.map((x, i) => ({ x, y: yValues[i] }));\r\n    setData(plotData);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Plot Graph</h1>\r\n      <div>\r\n        <label>\r\n          X-axis data (comma separated): \r\n          <input type=\"text\" value={xData} onChange={(e) => setXData(e.target.value)} />\r\n        </label>\r\n      </div>\r\n      <div>\r\n        <label>\r\n          Y-axis data (comma separated): \r\n          <input type=\"text\" value={yData} onChange={(e) => setYData(e.target.value)} />\r\n        </label>\r\n      </div>\r\n      <button onClick={handlePlot}>Plot</button>\r\n      \r\n      <ResponsiveContainer width=\"100%\" height={400}>\r\n        <LineChart data={data}>\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis dataKey=\"x\" />\r\n          <YAxis />\r\n          <Tooltip />\r\n          <Legend />\r\n          <Line type=\"monotone\" dataKey=\"y\" stroke=\"#8884d8\" />\r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PlotGraph;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}